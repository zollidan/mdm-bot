from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
# MARK: kbs
# TODO: refactor this file later 

def main_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–ü–æ–∏—Å–∫", callback_data="search")
    kb.button(text="–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞", callback_data="cart")
    kb.button(text="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="favorites")
    kb.button(text="–ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    kb.button(text="–ó–∞–∫–∞–∑—ã", callback_data="orders")
    # kb.button(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="review")
    kb.button(text="–ü–æ–º–æ—â—å", callback_data="help")

    kb.adjust(1)
    return kb.as_markup()

def search_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text="üìù –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search_by_name")
    kb.button(text="üîô –ù–∞–∑–∞–¥", callback_data="main_page")
    kb.adjust(2, 2)
    return kb.as_markup()

def product_not_found_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üî¢ –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É", callback_data="search_by_code")
    kb.button(text="üìù –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search_by_name")
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_page")
    
    kb.adjust(2, 2)
    return kb.as_markup()

def product_kb(product_id: int, is_fav: bool = False) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞.
    
    Args:
        product_id: ID —Ç–æ–≤–∞—Ä–∞
        is_fav: –ù–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–æ–≤–∞—Ä –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
    """
    kb = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
    kb.button(
        text="üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", 
        callback_data=f"add_cart_{product_id}"
    )
    
    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    if is_fav:
        kb.button(
            text="‚ùå –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ", 
            callback_data=f"remove_fav_{product_id}"
        )
    else:
        kb.button(
            text="‚≠ê –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", 
            callback_data=f"add_fav_{product_id}"
        )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–æ–º
    kb.button(
        text="üìã –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏", 
        callback_data=f"specs_{product_id}"
    )
    kb.button(
        text="üí¨ –û—Ç–∑—ã–≤—ã", 
        callback_data=f"reviews_{product_id}"
    )
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    kb.button(text="üîç –ö –ø–æ–∏—Å–∫—É", callback_data="search")
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_page")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥)
    kb.adjust(1, 1, 2, 2, 2)
    
    return kb.as_markup()

def favorite_kb(results) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    for i, (product, favorite) in enumerate(results, 1):
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message += (
            f"<b>{i}. {product.name}</b>\n"
            f"üìä –ê—Ä—Ç–∏–∫—É–ª: {product.vendor_code}\n"
            f"üí∞ –¶–µ–Ω–∞: {product.price} —Ä—É–±.\n"
            f"üìÖ –î–æ–±–∞–≤–ª–µ–Ω: {favorite.created_date.strftime('%d.%m.%Y')}\n\n"
        )
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        kb.button(text=f"üìã –ö–∞—Ä—Ç–æ—á–∫–∞ #{i}", callback_data=f"view_product_{product.id}")
        kb.button(text=f"üõí –í –∫–æ—Ä–∑–∏–Ω—É #{i}", callback_data=f"add_cart_{product.id}")
        kb.button(text=f"‚ùå –£–¥–∞–ª–∏—Ç—å #{i}", callback_data=f"remove_fav_{product.id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–∏–∑—É
    kb.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="favorites")
    kb.button(text="üõí –í –∫–æ—Ä–∑–∏–Ω—É –≤—Å–µ", callback_data="add_all_to_cart")
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_page")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (3 –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—è–¥, –∑–∞—Ç–µ–º 3 –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
    kb.adjust(3)
    return kb.as_markup()

def orders_kb(orders_by_date) -> InlineKeyboardMarkup:
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
    kb = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—ã, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–∞–º
    for date, date_orders in sorted(orders_by_date.items(), reverse=True):
        message += f"üìÖ <b>{date}</b>\n"
        
        for i, (order, product) in enumerate(date_orders, 1):
            message += (
                f"{i}. <b>{product.name}</b>\n"
                f"   üìä –ê—Ä—Ç–∏–∫—É–ª: {product.vendor_code}\n"
                f"   üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order.quantity} —à—Ç.\n"
                f"   üí∞ –°—É–º–º–∞: {order.summ:.2f} —Ä—É–±.\n"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
            kb.button(
                text=f"üìã –ó–∞–∫–∞–∑ #{order.id}", 
                callback_data=f"order_details_{order.id}"
            )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    kb.button(text="üì± –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager")
    kb.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="orders")
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_page")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    kb.adjust(1)
    return kb.as_markup()

def profile_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="edit_name")
    kb.button(text="üìû –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", callback_data="edit_phone")
    kb.button(text="üè† –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å", callback_data="edit_address")
    kb.button(text="üìä –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤", callback_data="orders_history")
    kb.button(text="üîô –ù–∞–∑–∞–¥", callback_data="main_page")
    kb.adjust(2, 2, 1)
    return kb.as_markup()

def help_kb(user_telegram_id):
    kb = InlineKeyboardBuilder()
    kb.button(text="üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º", callback_data="help_call")
    kb.button(text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É", callback_data="help_send_email")
    kb.button(text="üí¨ –ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data="help_send_tg")
    kb.button(text="‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="help_faq")
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_page")
    
    kb.adjust(1)
    return kb.as_markup()

